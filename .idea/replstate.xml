<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1465931700956">{:repl-history {:ide [], :local [&quot;(def x {:test 1 :test2 2})&quot; &quot;(def x '({:test 1 :test2 2} {:test 1 :test3 3}))&quot; &quot;x&quot; &quot;(filter #(= 1 (% :test)) x)&quot; &quot;(filter #(= 2 (% :test2)) x)&quot; &quot;(= \&quot;Customer\&quot; \&quot;Customer\&quot;)&quot; &quot;(doc identity)&quot; &quot;(count \&quot;Customer\&quot;)&quot; &quot;(def x \&quot;634, Start, End, here, stop, there\\n\&quot;)&quot; &quot;(clojure.string/split-lines x)&quot; &quot;(def y (clojure.string/split-lines x))&quot; &quot;y&quot; &quot;(first y)&quot; &quot;(def z (map #(str/split % #\&quot;,\&quot;) y))&quot; &quot;z&quot; &quot;(first (first z))&quot; &quot;(count (first (first z)))&quot; &quot;(println (first (first z)))&quot; &quot;(def header [:1 :2 :3 :4 :5 :6])&quot; &quot;(def a (map #(zipmap header %) z))&quot; &quot;a&quot; &quot;(first a)&quot; &quot;((first a) :1)&quot; &quot;(println ((first a) :1))&quot; &quot;(println ((first a) :2))&quot; &quot;(count ((first a) :1))&quot;], :remote []}}</component>
</project>